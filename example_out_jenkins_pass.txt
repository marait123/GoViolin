tarted by an SCM change
Obtained Jenkinsfile from git https://github.com/marait123/GoViolin.git
[Pipeline] Start of Pipeline
[Pipeline] node
Running on Jenkins in /var/lib/jenkins/workspace/violin-pipe
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Declarative: Checkout SCM)
[Pipeline] checkout
The recommended git tool is: git
No credentials specified
 > git rev-parse --resolve-git-dir /var/lib/jenkins/workspace/violin-pipe/.git # timeout=10
Fetching changes from the remote Git repository
 > git config remote.origin.url https://github.com/marait123/GoViolin.git # timeout=10
Fetching upstream changes from https://github.com/marait123/GoViolin.git
 > git --version # timeout=10
 > git --version # 'git version 2.25.1'
 > git fetch --tags --force --progress -- https://github.com/marait123/GoViolin.git +refs/heads/*:refs/remotes/origin/* # timeout=10
 > git rev-parse refs/remotes/origin/master^{commit} # timeout=10
Checking out Revision e57abad21a91c9a17cc6355521a87166b7d81da6 (refs/remotes/origin/master)
 > git config core.sparsecheckout # timeout=10
 > git checkout -f e57abad21a91c9a17cc6355521a87166b7d81da6 # timeout=10
Commit message: "modified the image tag"
 > git rev-list --no-walk a1b1400b7b4a7ae0940eebf85ddb5e6f4e3dc0e0 # timeout=10
[Pipeline] }
[Pipeline] // stage
[Pipeline] withEnv
[Pipeline] {
[Pipeline] withCredentials
Masking supported pattern matches of $DOCKERHUB_CREDENTIALS or $DOCKERHUB_CREDENTIALS_PSW
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Declarative: Tool Install)
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] }
[Pipeline] // stage
[Pipeline] withEnv
[Pipeline] {
[Pipeline] stage
[Pipeline] { (Build)
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] withEnv
[Pipeline] {
[Pipeline] sh
+ docker build --tag marait123/violin:latest .
Sending build context to Docker daemon  225.3MB

Step 1/13 : FROM golang:1.16.4-alpine AS build-env
 ---> 722a834ff95b
Step 2/13 : WORKDIR /goviolin
 ---> Using cache
 ---> 59d090bbe9a6
Step 3/13 : COPY . .
 ---> 65cd86432bdf
Step 4/13 : RUN rm -f go.mod go.sum
 ---> Running in 38fa41f4624b
Removing intermediate container 38fa41f4624b
 ---> 7b5ddb692b8b
Step 5/13 : RUN go mod init violin && go mod tidy && go mod vendor
 ---> Running in 2a8110cc3346
[91mgo: creating new go.mod: module violin
[0m[91mgo: to add module requirements and sums:
	go mod tidy
[0m[91mgo: finding module for package github.com/stretchr/testify/assert
[0m[91mgo: downloading github.com/stretchr/testify v1.7.1
[0m[91mgo: found github.com/stretchr/testify/assert in github.com/stretchr/testify v1.7.1
[0m[91mgo: downloading github.com/davecgh/go-spew v1.1.0
[0m[91mgo: downloading github.com/pmezard/go-difflib v1.0.0
[0m[91mgo: downloading gopkg.in/yaml.v3 v3.0.0-20200313102051-9f266ea9e77c
[0m[91mgo: downloading gopkg.in/check.v1 v0.0.0-20161208181325-20d25e280405
[0mRemoving intermediate container 2a8110cc3346
 ---> 0a54ffbcdf64
Step 6/13 : ENV GO111MODULE=on
 ---> Running in 83deb65c874f
Removing intermediate container 83deb65c874f
 ---> 972731b78987
Step 7/13 : RUN export CGO_ENABLED=0
 ---> Running in 8452d9ced8ad
Removing intermediate container 8452d9ced8ad
 ---> dc8bb681f70c
Step 8/13 : RUN go build -o goviolin .
 ---> Running in cf54b9c4deb8
Removing intermediate container cf54b9c4deb8
 ---> b12552c48bcc
Step 9/13 : FROM alpine:latest
 ---> e66264b98777
Step 10/13 : COPY --from=build-env /goviolin /goviolin
 ---> f5aeff5311fe
Step 11/13 : WORKDIR /goviolin
 ---> Running in 9e9441fea5c8
Removing intermediate container 9e9441fea5c8
 ---> dbc0796610b1
Step 12/13 : EXPOSE 8081
 ---> Running in f1c717486f7f
Removing intermediate container f1c717486f7f
 ---> fbcdfb390740
Step 13/13 : CMD ["./goviolin"]
 ---> Running in ca92b6c53a5e
Removing intermediate container ca92b6c53a5e
 ---> 9d28321b2143
Successfully built 9d28321b2143
Successfully tagged marait123/violin:latest
[Pipeline] sh
+ rm -f go.mod go.sum
[Pipeline] sh
+ go mod init violin
go: creating new go.mod: module violin
go: to add module requirements and sums:
	go mod tidy
+ go mod tidy
go: finding module for package github.com/stretchr/testify/assert
go: found github.com/stretchr/testify/assert in github.com/stretchr/testify v1.7.1
+ go mod vendor
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Test)
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] withEnv
[Pipeline] {
[Pipeline] sh
+ go test
map[]
<!DOCTYPE html>
<html>
<head>

<script type='text/javascript' src='https://ajax.googleapis.com/ajax/libs/jquery/3.1.1/jquery.min.js'></script>
<link href='https://fonts.googleapis.com/css?family=Rosario:400' rel='stylesheet' type='text/css'>
<link rel="stylesheet" type="text/css" href="../css/main.css">
<title>Practice Scales and Arpeggios</title>
</head>
<body>

<nav>
<ul>
  <li><a href="/">Home</a></li>
  <li><a class="active" href="scale">Scales &amp; Arpeggios</a></li>
  <li><a href="duets">Duets</a></li>
</ul>
</nav>


<div class="mainbody">
<h1>Practice Scales &amp; Arpeggios</h1>
<div class="indent"><p>Improve your intonation by practicing scales and arpeggios</p></div>
</div>

<div class="optionselect">
  <form action="/scaleshow" method="post">

      <div class="scalearpselect">
       
         <input type="radio" name=Scalearp value=Scale  checked> Scales
       
         <input type="radio" name=Scalearp value=Arpeggio  > Arpeggios
       <br>
      </div>
      <div class="pitchselect">
       
         <input type="radio" name=Pitch value=Major  checked> Major
       
         <input type="radio" name=Pitch value=Minor  > Minor
       
      </div>
      <div class="keyselect">
        
          <input type="radio" name=Key value=A  > A
        
          <input type="radio" name=Key value=Bb  > Bb
        
          <input type="radio" name=Key value=B  > B
        
          <input type="radio" name=Key value=C  checked> C
        
          <input type="radio" name=Key value=C#/Db  > C#/Db
        
          <input type="radio" name=Key value=D  > D
        
          <input type="radio" name=Key value=Eb  > Eb
        
          <input type="radio" name=Key value=E  > E
        
          <input type="radio" name=Key value=F  > F
        
          <input type="radio" name=Key value=F#/Gb  > F#/Gb
        
          <input type="radio" name=Key value=G  > G
        
          <input type="radio" name=Key value=G#/Ab  > G#/Ab
        
      </div>
      <div class="octaveselect">
        
          <input type="radio" name=Octave value=1  checked> 1 Octave
        
          <input type="radio" name=Octave value=2  > 2 Octave
        
      </div>
  </form>
</div>


  <div class="scale">
    <img src="/img/scale/major/c1.png" id="scaleImage">
  </div>


<div class ="audioheader">
  <span class="scale1name">  Listen to Major Scale  </span>    <span class="scale2name"> Listen to Drone   </span> 
</div>




  <div class="audio">
    
    <audio controls id="myAudio">
    <source src="/mp3/scale/major/c1.mp3" type="audio/mp3">
    Your browser does not support the audio element.
    </audio> <div class ="looptext"><input type="checkbox" name="loop" onclick="loopClicker()">  Loop <br></div>
  </div>

<script type="text/javascript">
  function loopClicker(){
    if (document.getElementById("myAudio").loop == false){
      document.getElementById("myAudio").loop = true;
    } else {
      document.getElementById("myAudio").loop = false;
    }
  }
</script>



  <div class="audio2">
    <audio controls id="myAudio2">
    <source src="/mp3/drone/c1.mp3" type="audio/mp3">
    Your browser does not support the audio element.
  </audio> <div class ="looptext"><input type="checkbox" name="loop" onclick="loopClicker2()">  Loop <br></div>
  </div>
<script type="text/javascript">
  function loopClicker2(){
    if (document.getElementById("myAudio2").loop == false){
      document.getElementById("myAudio2").loop = true;
    } else {
      document.getElementById("myAudio2").loop = false;
    }
  }
</script>




<script type='text/javascript'>
 $(document).ready(function() {
   $('input[name=Key]').change(function(){
     $('form').submit();
   });
});
$(document).ready(function() {
  $('input[name=Pitch]').change(function(){
    $('form').submit();
  });
});
$(document).ready(function() {
  $('input[name=Octave]').change(function(){
    $('form').submit();
  });
});
$(document).ready(function() {
  $('input[name=Scalearp]').change(function(){
    $('form').submit();
  });
});
</script>



</body>
</html>

200
map[Content-Type:[text/html; charset=utf-8]]
false
PASS
ok  	violin	0.006s
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Login)
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] withEnv
[Pipeline] {
[Pipeline] sh
+ echo ****
+ docker login -u marait123 --password-stdin
WARNING! Your password will be stored unencrypted in /var/lib/jenkins/.docker/config.json.
Configure a credential helper to remove this warning. See
https://docs.docker.com/engine/reference/commandline/login/#credentials-store

Login Succeeded
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Push)
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] withEnv
[Pipeline] {
[Pipeline] sh
+ docker push marait123/violin:latest
The push refers to repository [docker.io/marait123/violin]
d83c29052cdc: Preparing
24302eb7d908: Preparing
24302eb7d908: Layer already exists
d83c29052cdc: Pushed
latest: digest: sha256:68031e92102a5ab5dbb363030935e504098696490bc181a5afb716ca7580464d size: 741
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Deploy)
[Pipeline] tool
[Pipeline] envVarsForTool
[Pipeline] withEnv
[Pipeline] {
[Pipeline] echo
Deploying....
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // stage
[Pipeline] stage
[Pipeline] { (Declarative: Post Actions)
[Pipeline] sh
+ docker logout
Removing login credentials for https://index.docker.io/v1/
[Pipeline] }
[Pipeline] // stage
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // withCredentials
[Pipeline] }
[Pipeline] // withEnv
[Pipeline] }
[Pipeline] // node
[Pipeline] End of Pipeline
Finished: SUCCESS